# EXIT: 0
from tests.asserts import assert


def check_divmod(x: int, y: int, d: int, m: int) -> bool:
    rd: int = x // y
    rm: int = x % y

    return (d == rd) & (m == rm) & (x == (rd) * y + (rm))


def main() -> int:
    assert(1 == 1, '1 == 1')
    assert(1 != 0, '1 != 0')
    assert(1 < 2, '1 < 2')
    assert(1 <= 2, '1 <= 2')
    assert(1 <= 1, '1 <= 1')
    assert(2 > 1, '2 > 1')
    assert(2 >= 1, '2 >= 1')
    assert(2 >= 2, '2 >= 2')

    assert(-1 < 0, '-1 < 0')
    assert(-1 == -1, '-1 == -1')
    assert(+1 > 0, '+1 > 0')
    assert(+1 == 1, '+1 == 1')

    assert(1 + 2 == 3, '1 + 2 == 3')
    assert(3 - 1 == 2, '3 - 1 == 2')
    assert(3 - 1 == 2, '3 * 4 == 12')

    assert(check_divmod(15, 4, 3, 3),    'divmod(15, 4) == (3, 3)')
    assert(check_divmod(-17, 4, -5, 3),  'divmod(-17, 4) == (-5, 3)')
    assert(check_divmod(15, -6, -3, -3), 'divmod(15, -6) == (-3, -3)')
    assert(check_divmod(-11, -7, 1, -4), 'divmod(-11, -7) == (1, -4)')

    return 0
