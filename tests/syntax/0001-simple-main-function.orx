# EXIT: 1
def main(a: int) -> int:
    # While statement: simple
    while a:
        pass

    # While statement: else suite
    while a:
        pass
    else:
        pass

    # Condition statement: simple
    if a:
        pass

    # Condition statement: else suite
    if a:
        pass
    else:
        pass

    # Condition statement: elif suite
    if a:
        pass
    elif b:
        pass

    # Condition statement: elif and else suites
    if a:
        pass
    elif b:
        pass
    else:
        pass

    # Condition statement: multiple elif suites
    if a:
        pass
    elif b:
        pass
    elif c:
        pass

    # Condition statement: multiple elif and else suites
    if a:
        pass
    elif b:
        pass
    elif c:
        pass
    else:
        pass

    # With statement: simple
    with main():
        pass

    # With statement: target
    with main() as a:
        pass

    # Try statement: finally suite
    try:
        pass
    finally:
        return None

    # Try statement: except suite
    try:
        pass
    except:
        pass

    # Try statement: except targets
    try:
        pass
    except Exception:
        pass
    except Exception as ex:
        pass
    except:
        pass

    # Try statement: except and else suites
    try:
        pass
    except:
        pass
    else:
        pass

    # Try statement: except and finally suites
    try:
        pass
    except:
        pass
    finally:
        pass

    # Try statement: except and else and finally suites
    try:
        pass
    except:
        pass
    else:
        pass
    finally:
        pass

    # Try statement: full
    try:
        pass
    except Exception:
        pass
    except Exception as ex:
        pass
    except:
        pass
    else:
        pass
    finally:
        pass

    # Assign statement
    a = 1
    a.a = 1
    a, a.e = 1, 2
    a, a.e, = 1, 2,
    a, b = b, a

    # Augmented assignment statement
    a += b
    a -= b
    a *= b
    a @= b
    a /= b
    a //= b
    a %= b
    a **= b
    a >>= b
    a <<= b
    a &= b
    a ^= b
    a |= b

    # Tuples
    1, 2, 3
    1, 2, 3,
    (1, 2, 3)
    (1, 2, 3,)

    # Arrays
    [1, 2, 3]
    [1, 2, 3,]

    # Sets
    {1}
    {1,}
    {1, 2, 3}
    {1, 2, 3,}

    # Dicts
    {a: 1}
    {a: 1,}
    {a: 1, b: 2, c: 3}
    {a: 1, b: 2, c: 3,}

    # Empty tuple and dict
    ()
    {}

    # Condition expressions
    True if None else False

    # Unary expressions
    +1
    -1
    ~1

    # Binary expressions
    1 + 1
    2 - 1
    3 * 5
    3 / 2
    3 // 2
    2 | 1
    2 & 1
    1 ** 2
    1 ^ 2
    1 % 1
    1 @ 1
    1 << 1
    1 >> 1

    # Compare expression
    a == b
    a != b
    a < b
    a <= b
    a > b
    a >= b
    a is b
    a is not b
    a in b
    a not in b

    a == b == c
    a != b != c
    a < b < c
    a <= b <= c
    a > b > c
    a >= b >= c

    # Logical expression
    not True
    True and False
    True or False
